<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[HDU 1254 推箱子]]></title>
      <url>http://taolvezh.cn/2016/09/04/hdu1254/</url>
      <content type="html"><![CDATA[<p>推箱子是一个很经典的游戏.今天我们来玩一个简单版本.<a id="more"></a></p>
<h3 id="推箱子"><a href="#推箱子" class="headerlink" title="推箱子"></a>推箱子</h3><p>Time Limit: 2000/1000 MS (Java/Others)<br>Memory Limit: 65536/32768 K (Java/Others)</p>
<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>在一个M*N的房间里有一个箱子和一个搬运工,搬运工的工作就是把箱子推到指定的位置,注意,搬运工只能推箱子而不能拉箱子,因此如果箱子被推到一个角上(如图2)那么箱子就不能再被移动了,如果箱子被推到一面墙上,那么箱子只能沿着墙移动.</p>
<p>现在给定房间的结构,箱子的位置,搬运工的位置和箱子要被推去的位置,请你计算出搬运工至少要推动箱子多少格.</p>
<div align="center"><br><img src="http://img.blog.csdn.net/20151211100807926" alt="enter description here"><br></div>

<p>Sample Input<br>1<br>5 5<br>0 3 0 0 0<br>1 0 1 4 0<br>0 0 1 0 0<br>1 0 2 0 0<br>0 0 0 0 0</p>
<p>Sample Output<br>4</p>
<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><ul>
<li>主要思路是<ul>
<li>先对箱子广度优先搜索，决定箱子可以去的位置</li>
<li>再对人进行深度优先搜索，判断是否可以到达箱子的位置</li>
</ul>
</li>
</ul>
<h3 id="解题代码"><a href="#解题代码" class="headerlink" title="解题代码"></a>解题代码</h3><p>将代码分为五部分进行解释。</p>
<h4 id="变量定义"><a href="#变量定义" class="headerlink" title="变量定义"></a>变量定义</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span> </span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> WALL 1</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> ROAD 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> BOX_START_POINT 2</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAN_START_POINT 4</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> TERMINAL 3</span></div><div class="line"><span class="keyword">int</span> start_man_x, start_man_y;</div><div class="line"><span class="keyword">int</span> start_box_x, start_box_y;</div><div class="line"></div><div class="line"><span class="keyword">int</span> direction[<span class="number">4</span>][<span class="number">2</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span> &#125;;<span class="comment">//方向</span></div><div class="line"><span class="keyword">int</span> <span class="built_in">map</span>[<span class="number">10</span>][<span class="number">10</span>];<span class="comment">//地图</span></div><div class="line"><span class="keyword">int</span> mark[<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>][<span class="number">10</span>];<span class="comment">//标记人与箱子此时的状态是否出现过</span></div><div class="line"><span class="keyword">int</span> flag[<span class="number">10</span>][<span class="number">10</span>];</div><div class="line"><span class="keyword">int</span> cols, rows;</div><div class="line"><span class="keyword">bool</span> can_arrive;<span class="comment">//人是否可以到达箱子所在的位置</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">struct</span> node&#123;</div><div class="line">	<span class="keyword">int</span> man_x;</div><div class="line">	<span class="keyword">int</span> man_y;</div><div class="line">	<span class="keyword">int</span> box_x;</div><div class="line">	<span class="keyword">int</span> box_y;</div><div class="line">	<span class="keyword">int</span> cnt_step=<span class="number">0</span>;</div><div class="line">&#125;;<span class="comment">//node结构体</span></div><div class="line">node n1, n2, man_can_stepto;</div></pre></td></tr></table></figure>
<p>direction数组控制箱子和人的前进方向，将其看做二维数组（2*4），分别代表上下左右。<br>例如:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">direction[<span class="number">0</span>][<span class="number">0</span>]&amp;direction[<span class="number">0</span>][<span class="number">2</span>]</div></pre></td></tr></table></figure></p>
<p>代表向上，以此类推。</p>
<p>node结构体存储了一个状态，人与箱子此时所在的位置，以及箱子已经被推进的次数。</p>
<h4 id="判断人或者箱子位置是否合法"><a href="#判断人或者箱子位置是否合法" class="headerlink" title="判断人或者箱子位置是否合法"></a>判断人或者箱子位置是否合法</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_ok</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; x &lt; rows&amp;&amp;y &lt; cols&amp;&amp;<span class="built_in">map</span>[x][y]!=<span class="number">1</span>)</div><div class="line">		<span class="keyword">return</span> <span class="literal">true</span>;</div><div class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果此时的坐标在map范围内，且该位置不是墙，则合法，返回true。否则false。</p>
<h4 id="判断人是否可以到达箱子所在的点（深度优先搜索）"><a href="#判断人是否可以到达箱子所在的点（深度优先搜索）" class="headerlink" title="判断人是否可以到达箱子所在的点（深度优先搜索）"></a>判断人是否可以到达箱子所在的点（深度优先搜索）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x_man,<span class="keyword">int</span> y_man,<span class="keyword">int</span> x_box,<span class="keyword">int</span> y_box)</span></span>&#123;</div><div class="line">	<span class="keyword">if</span> (x_man == x_box&amp;&amp;y_man == y_box)&#123;</div><div class="line">		can_arrive = <span class="literal">true</span>;</div><div class="line">		<span class="keyword">return</span>;</div><div class="line">	&#125;<span class="comment">//两个点重合表示人可以到达箱子所在的点，标记can_arrive为true。</span></div><div class="line">	<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span> &amp;&amp; !can_arrive; i++)&#123;<span class="comment">//逐方向搜索人是否可以到达箱子所在的点</span></div><div class="line">		<span class="keyword">int</span> cur_x = x_man + direction[i][<span class="number">0</span>];</div><div class="line">		<span class="keyword">int</span> cur_y = y_man + direction[i][<span class="number">3</span>];</div><div class="line">		<span class="keyword">if</span> (is_ok(cur_x, cur_y) &amp;&amp; flag[cur_x][cur_y] == <span class="number">0</span>)&#123;</div><div class="line">			flag[cur_x][cur_y] = <span class="number">1</span>;<span class="comment">//去过的位置标记为1</span></div><div class="line">			dfs(cur_x, cur_y, x_box, y_box);<span class="comment">//继续dfs</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="判断箱子是否可以到达目标点（广度优先搜索）"><a href="#判断箱子是否可以到达目标点（广度优先搜索）" class="headerlink" title="判断箱子是否可以到达目标点（广度优先搜索）"></a>判断箱子是否可以到达目标点（广度优先搜索）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="built_in">queue</span>&lt;node&gt; q;<span class="comment">//为bfs建立一个队列</span></div><div class="line">	<span class="keyword">while</span> (!q.empty())</div><div class="line">	&#123;</div><div class="line">		q.pop();<span class="comment">//清空队列</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">int</span> man_stepto_x, man_stepto_y;</div><div class="line">	n1.box_x = start_box_x;</div><div class="line">	n1.box_y = start_box_y;</div><div class="line">	n1.man_x = start_man_x;</div><div class="line">	n1.man_y = start_man_y;</div><div class="line">	n1.cnt_step=<span class="number">0</span>;<span class="comment">//将初始态赋给n1</span></div><div class="line">	mark[start_man_x][start_man_y][start_box_x][start_box_y] = <span class="number">1</span>;<span class="comment">//标记此时的状态</span></div><div class="line">	q.push(n1);</div><div class="line">	<span class="keyword">while</span> (!q.empty())&#123;</div><div class="line">		n1 = q.front();</div><div class="line">		q.pop();</div><div class="line">		<span class="keyword">if</span> (<span class="built_in">map</span>[n1.box_x][n1.box_y] == TERMINAL)&#123;<span class="comment">//若n1此时箱子已经达到终点，输出结果</span></div><div class="line">			<span class="built_in">cout</span> &lt;&lt; n1.cnt_step &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)&#123;</div><div class="line">			n2.box_x = n1.box_x + direction[i][<span class="number">0</span>];</div><div class="line">			n2.box_y = n1.box_y + direction[i][<span class="number">4</span>];</div><div class="line">			man_stepto_x = n1.box_x - direction[i][<span class="number">0</span>];</div><div class="line">			man_stepto_y = n1.box_y - direction[i][<span class="number">5</span>];</div><div class="line">			<span class="keyword">if</span> (is_ok(n2.box_x, n2.box_y) &amp;&amp; is_ok(man_stepto_x, man_stepto_y) &amp;&amp; </div><div class="line">				!mark[man_stepto_x][man_stepto_y][n2.box_x][n2.box_y])&#123;</div><div class="line">				<span class="built_in">memset</span>(flag, <span class="number">0</span>, <span class="keyword">sizeof</span>(flag));</div><div class="line">				flag[man_stepto_x][man_stepto_y] = <span class="number">1</span>;</div><div class="line">				flag[n1.box_x][n1.box_y] = <span class="number">1</span>;</div><div class="line">				can_arrive = <span class="number">0</span>;</div><div class="line">				dfs(man_stepto_x, man_stepto_y, n1.man_x, n1.man_y);</div><div class="line">				<span class="keyword">if</span> (can_arrive)&#123;</div><div class="line">					mark[man_stepto_x][man_stepto_y][n2.box_x][n2.box_y] = <span class="number">1</span>;</div><div class="line">					n2.man_x = man_stepto_x;</div><div class="line">					n2.man_y = man_stepto_y;</div><div class="line">					n2.cnt_step = n1.cnt_step + <span class="number">1</span>;</div><div class="line">					q.push(n2);</div><div class="line">				&#125;<span class="comment">//如果dfs后可以到达（can_arrive==true），n2入列，继续bfs</span></div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">	<span class="built_in">cout</span> &lt;&lt; <span class="string">"-1"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">	<span class="keyword">return</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>n1,n2,man_stepto的状态如图所示：</p>
<div align="center"><br><img src="http://i1.piimg.com/567571/957f6c1be4939c3c.png" alt="enter description here"><br></div>

<h4 id="主函数"><a href="#主函数" class="headerlink" title="主函数"></a>主函数</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> T;</div><div class="line">	<span class="built_in">cin</span> &gt;&gt; T;</div><div class="line">	<span class="keyword">while</span> (T--)&#123;</div><div class="line">		<span class="built_in">cin</span> &gt;&gt; rows &gt;&gt; cols;</div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rows; i++)</div><div class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cols; j++)&#123;</div><div class="line">			<span class="built_in">cin</span> &gt;&gt; <span class="built_in">map</span>[i][j];</div><div class="line">			<span class="built_in">memset</span>(mark,<span class="number">0</span>,<span class="keyword">sizeof</span>(mark));</div><div class="line">			<span class="keyword">if</span> (<span class="built_in">map</span>[i][j] == BOX_START_POINT)&#123;</div><div class="line">				start_box_x = i;</div><div class="line">				start_box_y = j;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">if</span> (<span class="built_in">map</span>[i][j] == MAN_START_POINT)&#123;</div><div class="line">				start_man_x = i;</div><div class="line">				start_man_y = j;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		bfs();</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[欢迎]]></title>
      <url>http://taolvezh.cn/2016/08/04/%E6%AC%A2%E8%BF%8E/</url>
      <content type="html"><![CDATA[<p>欢迎来到我的博客小站。<br><br><img src="http://ww2.sinaimg.cn/orj480/672ea2eagw1f4qye30g4uj20qo1bf7b5.jpg" alt="enter description here"><br><a id="more"></a></p>
<p>建立了自己的博客，希望与大家在这里探讨各种技术问题，请多指教~</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://taolvezh.cn/2016/08/02/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
